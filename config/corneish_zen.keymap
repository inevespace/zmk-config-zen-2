/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/
//#include <dt-bindings/zmk/keys.h>

#include "keys_ru_phonetic.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ______  &trans

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        tocmk {
            bindings = <&tog 1>;
            key-positions = <24 35>;
        };

        toplover {
            bindings = <&tog 4>;
            key-positions = <25 34>;
        };

        j-combo {
            bindings = <&kp J>;
            key-positions = <7 19>;
            layers = <1 2>;
        };

        k-combo {
            bindings = <&kp K>;
            key-positions = <8 20>;
            layers = <1>;
        };

        auxfunc {
            bindings = <&tog 8>;
            key-positions = <5 17 29>;
        };

        ru {
            bindings = <&tog 3>;
            key-positions = <11 23 35>;
        };

        tdp-combo {
            bindings = <&kp P>;
            key-positions = <4 16>;
            layers = <2>;
        };

        the1 {
            bindings = <&the_macro>;
            key-positions = <16 15>;
            layers = <1>;
        };

        exclamation {
            bindings = <&kp EXCL>;
            key-positions = <1 2>;
            layers = <1>;
        };

        ing {
            bindings = <&lk_ing 0 0>;
            key-positions = <17 16>;
        };

        he-combo {
            bindings = <&he_macro>;
            key-positions = <20 8>;
            layers = <2>;
            require-prior-idle-ms = <0>;
        };

        are-combo {
            bindings = <&are_macro>;
            key-positions = <1 13>;
            layers = <2>;
        };

        lnm-combo {
            bindings = <&kp M>;
            key-positions = <2 14>;
            layers = <2>;
        };

        scf-combo {
            bindings = <&kp F>;
            key-positions = <3 15>;
            layers = <2>;
        };
    };

    behaviors {
        tph: tap_preferr_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TPH";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        lk_qu: lk_qu {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_QU";
            bindings = <&kp>, <&qu_macro>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <100>;
        };

        lk_ing: lk_ing {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_ING";
            bindings = <&ting_macro>, <&ing_macro>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <130>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <120>;
        };

        lk_Ging: lk_Ging {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_GING";
            bindings = <&ing_macro>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <130>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <120>;
        };

        lk_kqu: lk_kqu {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_KQU";
            bindings = <&qu_macro>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <100>;
        };

        lk_you: lk_you {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_YOU";
            bindings = <&you_macro>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <100>;
        };

        lk_are: lk_are {
            compatible = "zmk,behavior-hold-tap";
            label = "LK_ARE";
            bindings = <&are_macro>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <100>;
        };
    };

    macros {
        the_macro: the_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E>;
            label = "THE_MACRO";
        };

        you_macro: you_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp O &kp U &kp SPACE>;
            label = "YOU_MACRO";
        };

        ing_macro: ing_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp G &kp SPACE>;
            label = "ING_MACRO";
        };

        ion_macro: ion_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp O &kp N>;
            label = "ION_MACRO";
        };

        rl_macro: rl_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp L>;
            label = "RL_MACRO";
        };

        ed_macro: ed_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp D &kp SPACE>;
            label = "ED_MACRO";
        };

        ting_macro: ting_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp N &kp G &kp SPACE>;
            label = "TING_MACRO";
        };

        qu_macro: qu_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU_MACRO";
        };

        he_macro: he_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp E>;
            label = "HE_MACRO";
        };

        are_macro: are_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp R &kp E &kp SPACE>;
            label = "ARE_MACRO";
        };
    };

    /*  Base (alpha) Layer  Hands Down Vibranium-Vb
    Building for a 36/42 key board
     ╭─────────────────────╮ ╭──────────────────────╮
ESC  │  X   W   M   G   J  │ │  #$  .:  /*  "«  '»  │ BSP
TAB  │  S   C   N   T   K  | |  ,;   A   E   I   H  │ Tg(Num)
LSFT │  B   P   L   D   V  │ │  -+   U   O   Y   F  │ RSFT
     ╰──────╮  App BSP  R  │ │  SPC RET TAB  ╭──────╯
            ╰──────────────╯ ╰───────────────╯

                l_alpha {
                        label = "HD-Vb";
                        bindings = <

&kp ESC  &ak_x  &ak_w   &ak_m   &ak_g   &ak_j           &HashDllr   &DotColn    &SlshStar   &DqtLbkt    &SqtRbkt  &kp BSPC
&kp TAB &hml LCTRL S &hrm_c LALT C   &hml LGUI N  &hrm_t LSHFT T &ak_k    &CmmaSemi   &hrm_a RSHFT A &hrm_e RGUI E  &hrm_i RALT I  &hmr RCTRL H &kp SEMI
&kp LSHFT &ak_b &ak_p   &kp L   &ak_d   &ak_v       &MinusPlus  &ak_u       &ak_o       &ak_y   &kp F &kp RSHFT

                        &AppSwitch &mm_bspc_del &lt l_nav R      &lt l_sym SPACE &lt l_nav RETURN  &tog l_num
                        >;
                };

                   l_akG {
                            label = "l_akG";
                            bindings = <
______  &kp T   &kp D   &kp L   ______  ______      ______  ______  ______  ______  ______  ______
______  ______  ______  ______  ______  &ak_lk      ______  ______  ______  ______  ______  ______
______  ______  ______  ______  ______  ______      ______  ______  ______  ______  ______  ______
                        ______  ______  ______      ______  ______  ______
                            >;
                   };
*/

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE     &kp Q  &kp W  &kp E     &kp R          &kp T          &kp Y        &kp U  &kp I      &kp O    &kp P     &kp DEL
&kp BACKSPACE  &kp A  &kp S  &kp D     &kp F          &kp G          &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LCTRL      &kp Z  &kp X  &kp C     &kp V          &kp B          &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                             &kp LGUI  &mt LSHFT TAB  &lt 5 SPACE    &lt 6 SPACE  &mo 7  &kp RALT
            >;
        };

        col {
            display-name = "colemak";
            bindings = <
&kp ESCAPE        &lk_qu Q 0       &tph AT_SIGN W  &tph HASH F   &tph DOLLAR P  &tph PERCENT B    &tph CARET J  &tph AMPERSAND L  &lk_you 0 U   &kp Y             &kp SQT          &kp DEL
&lt 10 BACKSPACE  &tph LEFT_ALT A  &lt 9 R         &tph LSHFT S  &tph LCTRL T   &lk_Ging 0 G      &kp M         &tph LCTRL N      &tph LSHFT E  &tph LEFT_META I  &tph LEFT_ALT O  &kp ENTER
&tog 2            &kp Z            &kp X           &kp C         &kp D          &kp V             &kp K         &kp H             &kp COMMA     &kp DOT           &kp FSLH         &kp COLON
                                                   &kp LGUI      &mt LSHFT TAB  &lt 5 SPACE       &lt 6 SPACE   &mo 7             &sl 11
            >;
        };

        crst {
            display-name = "crst";
            bindings = <
&kp ESCAPE        &tph EXCLAMATION W  &tph AT_SIGN L  &tph HASH C   &tph DOLLAR D     &tph PERCENT B    &tph CARET Z  &tph AMPERSAND A  &lk_you 0 U   &kp Y             &lk_qu K 0       &kp DEL
&lt 10 BACKSPACE  &tph LEFT_ALT R     &lt 9 N         &tph LSHFT S  &tph LCTRL T      &lk_Ging 0 G      &kp COMMA     &tph LCTRL O      &tph LSHFT E  &tph LEFT_META I  &tph LEFT_ALT H  &kp ENTER
&tog 2            &kp X               &kp M           &kp C         &kp D             &kp V             &kp DOT       &kp A             &kp H         &kp DOT           &kp FSLH         &kp COLON
                                                      &kp LGUI      &mt LEFT_GUI TAB  &lt 6 SPACE       &lt 6 SPACE   &mo 7             &sl 11
            >;
        };

        ru {
            display-name = "rus";
            bindings = <
&kp ESCAPE     &kp Q  &kp W  &kp E     &kp R                &kp T          &kp Y        &kp U  &kp I      &kp O    &kp P     &kp DEL
&kp BACKSPACE  &kp A  &kp S  &kp D     &kp F                &kp G          &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LCTRL      &kp Z  &kp X  &kp C     &kp RU_CYRILLIC_ZHE  &kp B          &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                             &kp LGUI  &mt LSHFT TAB        &lt 5 SPACE    &lt 6 SPACE  &mo 7  &kp RALT
            >;
        };

        plover {
            display-name = "plover";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R  &kp T    &kp Y  &kp U  &kp I      &kp O    &kp P     &kp LBKT
&kp BSPC    &kp A  &kp S  &kp D      &kp F  &kp G    &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &none  &none  &none      &none  &none    &none  &none  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                          &kp SPACE  &kp C  &kp V    &kp N  &kp M  &kp SPACE
            >;
        };

        num {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCLAMATION  &tph AMPERSAND N7          &tph ASTERISK N8       &kp N9               &kp EQUAL    &none     &none           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none          &kp NON_US_BACKSLASH
&none      &none            &tph DOLLAR NUMBER_4       &tph PERCENT N5        &tph CARET NUMBER_6  &none        &kp PLUS  &kp MINUS       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON  &kp SQT
&none      &none            &tph EXCLAMATION NUMBER_1  &tph AT_SIGN NUMBER_2  &tph HASH NUMBER_3   &kp N0       &none     &kp UNDERSCORE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none          &none
                                                       &trans                 &none                &trans       &none     &none           &none
            >;
        };

        sym {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS        &kp LPAR  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH  &kp BACKSLASH
&kp F1     &kp F2    &kp F3  &kp F4    &kp F5    &kp F6       &kp PLUS   &kp MINUS       &kp LBKT  &kp RBKT               &kp SEMICOLON         &kp GRAVE
&kp F7     &kp F8    &kp F9  &kp F10   &kp F11   &kp F12      &kp ASTRK  &kp UNDERSCORE  &kp LBRC  &kp RBRC               &kp PIPE              &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &none      &trans          &kp RALT
            >;
        };

        nav {
            bindings = <
&none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kt LG(N5)    &none  &kp LC(LEFT)    &kp UP_ARROW    &kp LC(RIGHT)  &kp PG_UP  &none
&none  &sk LEFT_ALT      &sk LEFT_META     &sk LEFT_SHIFT    &sk LCTRL         &none         &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &kp PG_DN  &none
&none  &none             &none             &none             &none             &none         &none  &kp HOME        &none           &kp END        &none      &none
                                           &none             &none             &none         &none  &none           &none
            >;

            label = "nav";
        };

        aux {
            bindings = <
&bt BT_NXT  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &none  &none    &none  &none  &none            &none            &none            &rgb_ug RGB_TOG
&bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &none  &none    &none  &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF
&sys_reset  &bootloader    &soft_off      &out OUT_TOG   &none  &none    &none  &none  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR
                                          &none          &none  &none    &none  &none  &none
            >;
        };

        os {
            bindings = <
&none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)    &none      &none      &none      &none      &none  &none
&none  &none             &none             &kp LSHFT         &none             &none         &kp LG(H)  &kp LG(J)  &kp LG(K)  &kp LG(L)  &none  &none
&none  &none             &none             &none             &none             &none         &none      &none      &none      &none      &none  &none
                                           &none             &none             &none         &none      &none      &none
            >;
        };

        rnumpad {
            bindings = <
&none  &none  &none  &none  &none  &none    &kp KP_NUMLOCK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK  &none
&none  &none  &none  &none  &none  &none    &none           &kp KP_N4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS      &none
&none  &none  &none  &none  &none  &none    &none           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp MINUS     &none
                     &none  &none  &none    &none           &kp KP_NUMBER_0  &kp DOT
            >;
        };

        type {
            bindings = <
&trans  &trans      &trans     &trans  &trans     &trans         &trans  &trans      &you_macro  &trans  &trans  &trans
&trans  &are_macro  &rl_macro  &trans  &trans     &ting_macro    &trans  &ion_macro  &the_macro  &trans  &trans  &trans
&trans  &trans      &trans     &trans  &ed_macro  &trans         &trans  &trans      &trans      &trans  &trans  &trans
                               &trans  &trans     &trans         &trans  &trans      &trans
            >;
        };
    };
};
